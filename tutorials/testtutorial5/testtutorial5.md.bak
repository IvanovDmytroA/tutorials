---
keywords: Azure
auto_validation: true
time: 10
tags: [ tutorial>intermediate, agreements:business_network_privacy_statement/nps, thismytag>mytagisgreat ]
author_name: Dmytro Ivanov
author_profile: https://github.com/IvanovDmytroA
contributors: [ Dmytro Ivanov>https://github.com/IvanovDmytroA, Oleksandra Kovtunenko > https://github.com/Oleksandra2 ]
primary_tag: software-product>sap-build
parser: v2
---
# Get an Overview of Building and Maintaining SaaS Applications on SAP BTP, ABAP Environment
<!-- description -->  Overview of developing and deploying custom SaaS applications on SAP Business Technology Platform, ABAP Environment

## Prerequisites
	@@ -28,8 +27,6 @@ primary_tag: software-product>sap-btp--abap-environment

This tutorial is intended as an overview of the necessary steps, and provides a sneak-peak into the overall process. Detailed steps on how to achieve this will be covered in further tutorials of this mission.

### Learn about the global accounts and subaccounts needed

The following figure shows the system landscape recommended for developing, operating and maintaining SaaS applications on SAP Business Technology Platform, ABAP Environment
	@@ -152,25 +149,23 @@
According to what is mentioned in the prerequisites, the ABAP systems that you use for development, testing, and add-on assembly are of type ABAP/standard and made available via entitlements. As a SaaS solution operator, you have to assign service entitlements to different subaccounts according to the following structure:
| Global Account| Sub-Account | Space | Entitlement | ABAP Systems|
|---------------|-------------|-------|-------------|-------------|
| Global Account for Development|01 Develop|Develop |1x ABAP/standard | COR|
|                       |      |    |ABAP/hana_compute_unit (standard: 2)||
|                       |      |    |ABAP/abap_compute_unit (standard: 1)||
|                                 | 02 Test | Test |1x ABAP/standard | QAS|
|                                 |         |        |ABAP/hana_compute_unit (standard: 2)||
|                                 |       |     |ABAP/abap_compute_unit (standard: 1)||
The service parameter `is_development_allowed` is used to differentiate between development and test systems.
> For development in the ABAP correction system COR, you, as a SaaS solution operator, create a system in subaccount 01 Develop in the development space. For correction system COR, set parameter `is_development_allowed = true`.  
> For testing in the ABAP quality assurance system QAS, you, as a SaaS solution operator, create a system in subaccount 02 Test in the test space. For quality assurance system QAS, set parameter `is_development_allowed = false`.
Users in the ABAP correction system COR might be locked and need to be unlocked for development of corrections.
For more information around versioning and branches, refer the [help documentation](https://help.sap.com/docs/BTP/65de2977205c403bbc107264b8eccf4b/9482e7eef4634cb993a4ae296b2029fa.html#versioning-and-branches).
For more information around add-on package types, refer the [help documentation](https://help.sap.com/docs/BTP/65de2977205c403bbc107264b8eccf4b/9482e7eef4634cb993a4ae296b2029fa.html#loio398be26971414fbb91cbe3b0a3cb8a26).

### Test Yourself